import fs from 'fs';

const html = fs.readFileSync('api-tester.html', 'utf-8');

console.log('üîç An√°lise de Redund√¢ncias:\n');

// 1. Verificar classes CSS n√£o usadas
const cssClasses = [...html.matchAll(/\.([a-z-]+)\s*\{/g)].map(m => m[1]);
const usedClasses = [...html.matchAll(/class="([^"]+)"/g)].map(m => m[1].split(' ')).flat();

const unusedClasses = cssClasses.filter(c => 
    !usedClasses.includes(c) && 
    !c.includes('hover') && 
    !c.includes('active') && 
    !c.includes('focus') &&
    !c.startsWith('status-') &&
    !c.startsWith('method') &&
    !c.startsWith('badge')
);

console.log('‚ùå Classes CSS possivelmente n√£o usadas:');
if (unusedClasses.length === 0) {
    console.log('   ‚úì Nenhuma encontrada!\n');
} else {
    unusedClasses.forEach(c => console.log(`   - .${c}`));
    console.log('');
}

// 2. Verificar IDs HTML
const definedIds = [...html.matchAll(/id="([^"]+)"/g)].map(m => m[1]);
const usedIds = [...html.matchAll(/getElementById\(['"]([^'"]+)['"]\)/g)].map(m => m[1]);

const unusedIds = definedIds.filter(id => !usedIds.includes(id));

console.log('‚ùå IDs HTML possivelmente n√£o usados:');
if (unusedIds.length === 0) {
    console.log('   ‚úì Nenhum encontrado!\n');
} else {
    unusedIds.forEach(id => console.log(`   - #${id}`));
    console.log('');
}

// 3. Verificar fun√ß√µes JavaScript
const definedFunctions = [...html.matchAll(/(?:async\s+)?function\s+(\w+)/g)].map(m => m[1]);
const usedInOnclick = [...html.matchAll(/onclick="(\w+)/g)].map(m => m[1]);
const usedInCode = [...html.matchAll(/(\w+)\(/g)].map(m => m[1]);

const allUsed = [...new Set([...usedInOnclick, ...usedInCode])];
const unusedFunctions = definedFunctions.filter(f => !allUsed.includes(f));

console.log('‚ùå Fun√ß√µes JavaScript possivelmente n√£o usadas:');
if (unusedFunctions.length === 0) {
    console.log('   ‚úì Nenhuma encontrada!\n');
} else {
    unusedFunctions.forEach(f => console.log(`   - ${f}()`));
    console.log('');
}

// 4. Estat√≠sticas
console.log('üìä Estat√≠sticas:');
console.log(`   - Total de classes CSS definidas: ${cssClasses.length}`);
console.log(`   - Total de IDs HTML: ${definedIds.length}`);
console.log(`   - Total de fun√ß√µes JS: ${definedFunctions.length}`);
console.log(`   - Tamanho do arquivo: ${(html.length / 1024).toFixed(2)} KB`);

// 5. Informa√ß√µes sobre o <title>
console.log('\nüìù Nota sobre o <title>:');
console.log('   ‚úì O <title> √â USADO - aparece na aba do browser');
console.log('   ‚úì N√£o √© vis√≠vel na p√°gina, mas √© importante para SEO');
console.log('   ‚úì Ajuda a identificar a aba quando tem m√∫ltiplas abertas');

